---
title: "Assigment 03"
format: html
editor: visual
author: Adaeze Obinelo
---

## Uploading file:

```{r}
library(tidyverse)
library(dplyr)
library(tidytext)
library(ggplot2)

```

```{r}

pub_url <- "https://github.com/USCbiostats/data-science-data/blob/master/03_pubmed/pubmed.csv"

tmp <- "pubmed.csv"

if (!file.exists(tmp)) {
  download.file(
    url      = mt_url,
    destfile = tmp,
    # method   = "libcurl", timeout = 1000 (you may need this option)
  )
}

pubm <- read_csv("pubmed.csv")
```

Seems like I have all 3241 abstracts

## 1. Un-nesting Tokens

```{r}
pubm %>%
  unnest_tokens(token, abstract) %>% 
  count (token, sort = TRUE) %>% 
  top_n(20,n)
```

Top results are filler words such as "the" "of" "and", etc, so I'll remove them with the anti_join statements

## Top Tokens Overall

```{r}
pubm %>%
  unnest_tokens(token, abstract) %>%
  anti_join(stop_words, by= c("token"="word")) %>% 
  count (token, sort = TRUE)
```

## Top Tokens, Grouped by Search Term:

```{r}
pubcount <- pubm %>%
  unnest_tokens(token, abstract) %>%
  group_by(term, token) %>% 
  anti_join(stop_words, by= c("token"="word")) %>% 
  count (token, sort = TRUE)

pub5 <-pubcount %>% 
  group_by(term) %>% 
  top_n(5,n) %>% 
  arrange(term)

Cov <- pub5 %>% 
  filter(term== "covid")
  
 cd <- pub5 %>% 
  filter(term== "cystic fibrosis")

 pc <- pub5 %>% 
  filter(term== "preeclampsia")

 mng<- pub5 %>% 
  filter(term== "meningitis")

 PC<- pub5 %>% 
  filter(term== "prostate cancer")
 
Cov

cd

pc

mng

PC
```

## Observations:

Overall, most of these tokens, though mentioned frequently, evidently are not very relevant to the search term other than that. We see that in "patients" being among the top 5 token for 4/5 of the search terms. Additionally, for all of the top search terms besides "meningitis", the top token is part of the search terms itself (for meningitis, it is the second token).

Additionally, many of the top tokens (I can reason) are mentioned in association with others to make a single phrase; for instance, "19" is likely written alongside COVID and "pre" is written alongside "exclampsia". I can check that with ngrams:

For "19":

```{r}
pubm %>%
  unnest_ngrams(ngram, abstract, n = 2) %>% 
  separate(ngram, into= c("word1", "word2"), sep= " ") %>% 
  select(word1, word2, term) %>% 
  group_by(term) %>% 
  arrange(term) %>% 
  filter(word2=="19"& term == "covid") 


```

Clearly, 19 appears most often behind COVID.

For "pre"

```{r}
pubm %>%
  unnest_ngrams(ngram, abstract, n = 2) %>% 
  separate(ngram, into= c("word1", "word2"), sep= " ") %>% 
  select(word1, word2, term) %>% 
  group_by(term) %>% 
  arrange(term) %>% 
  filter(word1=="pre"& term =="preeclampsia") 
```

Similarly, "pre" appears most often in association with pre-ecclampsia in abstracts generated with preeclampsia as the search term.

Since "pre" appears as a top toke overall also, I can check without selecting by term:

```{r}
pubm %>%
  unnest_ngrams(ngram, abstract, n = 2) %>% 
  separate(ngram, into= c("word1", "word2"), sep= " ") %>% 
  select(word1, word2) %>% 
  filter(word1=="pre") 
```

It appears I misled here, and it appears most overall as a modifier for other words (i.e. "existing" and "symptomatic").

## 2. Tokenization using Bigrams

Whoops did this above, but:

```{r}
pubm %>% 
  unnest_ngrams(ngram, abstract, n = 2) %>%
  count(ngram, sort = TRUE) %>% 
  top_n(10,n)
```

Visualization of top bigrams using ggplot

```{r}

pubm %>% 
  unnest_ngrams(ngram, abstract, n = 2) %>%
  count(ngram, sort = TRUE) %>% 
  top_n(10,n) %>% 
  ggplot(aes(n,fct_reorder(ngram, n)))+
  geom_col()+
  ylab("Bigrams")
  
```

## 3. Calculating TF-IDF value per each word-search combo:

```{r}
pubtf <- pubm %>%
  unnest_tokens(text, abstract) %>% 
  count(term, text) %>% 
  bind_tf_idf(text, term, n) %>% 
  arrange(tf_idf)
  
  
pubtf<- pubtf %>% 
  group_by(term) %>% 
  top_n(5, tf_idf) %>% 
  arrange(term)
 
 covtf<- pubtf%>% 
  filter(term== "covid") 

 cftf<- pubtf%>% 
  filter(term== "cystic fibrosis")
 
 petf<- pubtf%>% 
  filter(term== "preeclampsia")
 
 mngtf<- pubtf%>% 
  filter(term== "meningitis")
 
 pctf<- pubtf%>% 
  filter(term== "prostate cancer")
 
 covtf
 
 cftf
 
 petf
 
 mngtf
 
 pctf
```

Top word-search term combos are below. I wasn't sure how to fix this but my list is in ascending order sorry. I kept getting an error that I could not use a "function" when I tried to "arrange" by descending tf_idf.

COVID:

1.  **cov**
2.  **sars**
3.  coronavirus
4.  **pandemic**
5.  *covid*

Cystic Fibrosis

1.  **sweat**
2.  **cftr**
3.  *cystic*
4.  *fibrosis*
5.  cf

Meningitis

1.  **meninges**
2.  **csf**
3.  pachymeningitis
4.  **meningeal**
5.  meningitis

Preeclampsia

1.  **gestational**
2.  maternal
3.  **pregnancy**
4.  *preeclampsia*
5.  *eclampsia*

Prostate Cancer

1.  **castration**
2.  **prostatectomy**
3.  **psa**
4.  **androgen**
5.  prostate

## Observations and Differences

Some or most of the word-search term combos (**bolded**) are relevant co-search terms for the subject (i.e. "sweat" and "cftr" to cystic fibrosis search term, which are both involved in the pathphys of cf). Additionally, none of the words in the #1 spot by tf-idf are words included in the search term itself, as opposed to what was seen when we went off of token frequencies alone. The word-search terms results via TF-IDF are much more comprehensive than what we see with our initial token analysis. This makes sense since the TF-IDF score gives a weight to terms based both on how frequently they appear and on how specific they are to a document. For example, while the token analysis found words such as "prostate" "patients" and "cancer" to be most frequent, TF-IDF identified words such as "androgen" "psa" and "prostatectomy", which are words more relevent to the subject, and involved in diagnosis and treatment.

## 
